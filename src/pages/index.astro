---
import Layout from "../layouts/Layout.astro"
import {LockKeyhole,LockKeyholeOpen} from "@lucide/astro"
---
<Layout title="StegURL">
  <div class="flex flex-col p-4 mx-6 lg:mx-14 2xl:mx-42">
    <div class="flex flex-col md:flex-row gap-6 lg:gap-12">
      <div class="py-6 flex flex-col gap-6 flex-1">
        <textarea class="textarea textarea-info w-full h-136 bg-base-200 rounded-lg" id="secret"></textarea>
      </div>
      <div class="flex flex-col items-center justify-center gap-8">
        <button class=`btn btn-primary btn-circle btn-xl` id="hide"><LockKeyhole/></button>
        <button class="btn btn-secondary btn-circle btn-xl" id="extract"><LockKeyholeOpen/></button>
      </div>
      <div class="py-6 flex flex-col gap-6 flex-1">
        <textarea class="textarea textarea-info w-full h-136 bg-base-200 rounded-lg" id="coverText"></textarea>
      </div>
    </div>
  </div>
  <script>
    import { $,setLang,shorten} from "../assets/commonUtils";
    const bvids=["BV12Ja5zmEWo","BV1q4hezDE37","BV1d9a3zoE6s","BV1CnaGzuESC","BV1gCaJzqEuo","BV1tHhdzeEs7","BV1MphYzvEpv","BV1LNh9zBEtL","BV1Zkh9zGEno","BV18vhazqEkR","BV1wkhqzMEb1","BV1dXhqz8ERE","BV1jshRzCEUh","BV1RraGzREK5","BV1jVhUzoEtq","BV1i9a3zZEay","BV1qYaGzcEQU","BV1emhkzuETW","BV1ZAhYzEEgn","BV1RBaGzoEfv","BV1Qfh2z7Eje","BV1QWeAzAEeQ","BV1aUefzWEzi","BV1WqhqzrEpH","BV1RMhyzCEvV","BV1QLhYzgEzY","BV1FdvwzjEiE","BV1cVhCzpEnN","BV1V1hQzaERw","BV1kChqzqELY","BV1JUhqzPE7v","BV1bcaJzKEXK","BV14shdzaEVu","BV1uNhizyEiJ","BV1n5hCzQESm","BV155hqz4EXY","BV1R9hqzfEBC","BV1nMhzzuEaC","BV1M8hqzjEjr","BV1pehdzxE6z","BV1g3hQzdEpV","BV1EjhXz3EpK","BV1qWeXzjEsy","BV1ByhdzUEcC","BV1AthhzWE3r","BV13jhyzuEx3","BV1SnhdzNEGB","BV19Ehqz9EpM","BV1JBhdzXE9p","BV13baVzXEay","BV1Q2aGzHEVi","BV16EhRzmEgr","BV1kfhizqE3F","BV1FdhCzXEkS","BV1rba5zrEcP","BV1nPhqzPEzJ","BV1ZSa3z8Ekg","BV1tXaGz7E3j","BV1pZhizMEHZ","BV1DjhyzMETT","BV1eRvNzCEeM","BV1iphCzLE1c","BV1U3aGzLEd4","BV1oAajzTEGu","BV1j2hdz7EUk","BV15Pa5zfEGa","BV1UAhezTE4g","BV1Jih9zjEEc","BV1SPhiz5ExA","BV1R3eyzpEQD","BV173hqzbEn7","BV1YTh9zKE4g","BV1rba5zrE8a","BV1drhhzCEGy","BV1FZhCzHEXN","BV1NxhYzYE8z","BV1BseRzWELU","BV1m5aGzVEyK","BV15tvwzvEyN","BV125aGzVEUY","BV1M4ekzvE7a","BV1avhezLEgx","BV1wkhqzMEbw","BV1bVhQzWECJ","BV1Uja5zSE7h","BV1vNh9zqEpc","BV1cehyzoErb","BV11Jh6zSEaf","BV12MeXz4EcP","BV1pdeXzsEY5","BV1YEhqz9Efa","BV1WHaGzzEuN","BV1SRhkzeEY3","BV1FZhCzHEQA","BV1BNeyz4EEb","BV13qaJzrEru","BV1ajhZz1Eii","BV17phCzLEiJ","BV1UyhezuEc6","BV14PeXzcEXz","BV1hHhqzQEVK","BV1jnhCz2E2X","BV1TthqzmE9N","BV1tNaJzYE7S","BV16qhyz9EKM","BV15HaVztEpP","BV12LaGzkEXZ","BV1GbhXzAERa","BV1pYhYzZEKU","BV1N2hCzfEXo","BV1zHaJzQEsM","BV13ahrzhEMQ","BV1bohkzAEuq","BV1njhozoEdF","BV1vHhrzMEHm","BV1Lde2zcEjM","BV1XYhRzTEBR","BV181hizjE5n","BV1SBhCzNEtm","BV11Hh6zEEJU","BV1HuhrzjE9T","BV1mNh1zvEFY","BV1JThqzwEgf","BV1a7hvz2Ew5","BV16ohRzDE9U","BV1twh1zqEXL","BV1aohdz6Eu2","BV19ma5zbEcY","BV1KyhCzcEBu","BV17Xa3zbEYL","BV17zh9z5EZd","BV11bvNzhEys","BV1BHh1z9E8p","BV1jAhkzgEGt","BV12jh6zQEy9","BV1dAhkzuEDe","BV1GshzztE2m","BV1EdaVzNEyW","BV14QhizGEqQ","BV1ZyhYzJEFi","BV1MJhYzqEy6","BV1TvaVzUEWg","BV1mahUzCEFd","BV1hmaGzDEFh","BV1DKhSznEZ7","BV14Yhqz5E6c","BV15qhmzHEwe","BV19Gh2zUEQS","BV1ode2zcETg","BV1jGhqzZEvF","BV1WjeCzcELB","BV1Jeh9zmEff","BV1gXvcz8EvK","BV1XYhRzTEtn","BV1yhhdztETz","BV1t9hBzUEKp","BV1PqhqzrEKp","BV1h9vAziE4e","BV1b7h9zbEXf","BV1qDhUzhEve","BV1i3hqzbEXg","BV145aGz5Eu3","BV1Aehdz4Eoh","BV1MaaVzDE6L","BV1FQhrzmEth","BV1UqhXzdEwf","BV1rxh6z1ECz","BV1A3hRzpEY5","BV14Eh9zZE2T","BV15xhrzvENv","BV1CXhRzWEuG","BV13nhqzpE8S","BV1PzeyzNEWX","BV1riaEzpEZr","BV1YqaJzrEYa","BV19MhyzCE4H","BV1DCe1zJEmV","BV1w6hqzzE7H","BV19ShhzMEVT","BV15LhqzdEd9","BV1o9hUzbEYL","BV16ohRzDE4c","BV19fa3zWEsU","BV1LhaJz1Ee3","BV1cBvAzmEA9","BV1pAaVz6EDX","BV1Ume1z2EBE","BV1VbhCz3ENa","BV1KqhzzJEVb","BV1azeozQEzx","BV19fa3zWEBE","BV1iBa5zvEmL","BV1nha5z3Ebg","BV1WUaLzmE3U","BV1bveDzcEY7","BV19Mh9zvEkd","BV1RCa5zwEza","BV1VzhSzZEvr","BV1tXhBzJEah","BV1PfhBzjEY4","BV1w5hRznE7T","BV1AihvzeErK","BV1x4ekzeEmD","BV1A3hRzpEF9","BV1nQhrzmEaC","BV1KkhCzaE6H","BV1AVhozfEa1","BV16chZzdEYV","BV1tUhiz5E1x","BV1KYhqz5Emi","BV15ShdzLEbr","BV1wCa3zvEVX","BV1RNh9zqEmz","BV1WWhQz2Ef8","BV1DNaGzJE8C","BV18neyzjEQS","BV1MFvPzYEaw","BV1qzajzkE9G","BV1xPvPzfEBD","BV1vUh9zMEA1","BV1kghaz9EK1","BV1nPhqzPEbo","BV1UphyzPELf","BV1WDhaz4Egd","BV1ePh9zMEmy","BV1hZaEzMERq","BV14JhQzJEMp","BV1JNhqzYEVv","BV17nhCz2EdQ","BV1qPhyz7Eug","BV1WGhoz8EbM","BV1bbhzzRE1Z","BV1zphizwEDB","BV1B3e2zcEfv","BV15XhdzVEur","BV1dshRzkE2m","BV1rPhqzPEto","BV1HMaVzTE3c","BV1YGhdz6EXU","BV1LrhQzNEQH","BV1jphXzTEF1","BV1aahCzuEx6","BV1bkhez6EUo","BV1NPhXzJETZ","BV1x7hBz5Ebp","BV1Aza3zMESv","BV14bhZzqEkS","BV1Nza3zMEL4","BV1mahDzHEXA","BV1DqhRzeELw","BV1kkhqzME2M","BV1kKeUzGErY","BV1svvNztEAM","BV1ovaGzfExR","BV1wUaLzmEiC","BV1ZphCzLEFe","BV1EPvTz4E9G","BV11Be2zkEeZ","BV116hXz9ES8","BV1RjvTz7Ev3","BV19UhYz2EeM","BV1Z1hvz4Ece","BV1JHh1zREQr","BV1nuaVziEiG","BV1Qua5zsE84","BV1W3h1zhEAU","BV16fhezfEE7","BV1zJvPzUEWK","BV1kvvNz4Ejy","BV1tMhmz3E2f","BV1CmhrznEKw","BV1v5h2zEEFY","BV1JAe9zSEGi","BV1hHhZzGEJk","BV1tKhmzkEx3","BV1LkYazSE2D","BV1FehhzJEtE","BV1GxhzzoEMS","BV15xhCzVEUk","BV1gBhCzNEJw","BV1qKeyzdEJC","BV1TLaGzCEwH","BV1tVhQzWEt5","BV1RLeyzSEpA","BV1GVhYzrEiE","BV1oUaEz5EN5","BV1iRhUzZEJy","BV1J7hRzEE7c","BV1zZhazQEqk","BV1U3hBz7EGD","BV11khXzpEn1","BV1VXhdzVEs3","BV17FhYznE6X","BV1PPeUzyE1a","BV1Mth2zzEc9","BV1QXvczbE6C","BV1MKe1z1EfG","BV12ChazwEcW","BV1vShyz1EMi","BV15khQzeE8X","BV19dhvzSEwe","BV1rYvczGEYx","BV1Dwhiz1EMj","BV1z9aVziE5L","BV1P1hXzHErE","BV1AUhCztER2","BV1JKhzz6EZK","BV12LaGzkEyf","BV1BGe2z8E3W","BV1xNa7zREJS","BV1AbhhzXEnW","BV1H5hRznE2f","BV1xwhCzfEB2","BV1KuhezPEFR","BV1jghqzFE29","BV1V3hvzDEQv","BV1Jshmz8EGt","BV1urhoz6EXA","BV1KphhzoE7A","BV1VQhYz1E27","BV1fSa3z8EgW","BV1ZUhvzsEPH","BV1D2e1z7EqP","BV1yhaEzdEdg","BV1aEe9zzE43","BV1GahCzuE2y","BV1phhdztERo","BV1THh9zoEk5","BV1yghezaEeM","BV1rBhdzXE5f","BV1q2hdz7EW6","BV1j5hzzNEsj","BV1UAhezTEjW","BV1gchiz7EQg","BV1TJhkzbEWU","BV1kCedzcEjJ","BV1zea5zMEpS","BV1Sme1z2ES8","BV1J2e2zTEB7","BV1cPvTz4Epp","BV1eJe2zREXP","BV1UXe1z5EjV","BV1o9a3zoE3U","BV1KkhXzWEy2","BV1wBhvzAEWP","BV1y2hRztEo2","BV14rhazYECb","BV1J6hyzXEis","BV1eCvczvERn","BV1PthYzwEU1","BV1uSaGznE2s","BV1KthdzhECQ","BV115hmzTEiP","BV1S2hiz1EE1","BV1sYeyzME8a","BV1ExhmzfEoG","BV1PMhRzsEtX","BV1Aohoz8EiM","BV1Mxhvz3Ems","BV1tFhCzcERs","BV164aGzNE6x","BV1CUhXzEENZ","BV19FemztEpf","BV1TUh1zKEGf","BV1ssh9z9ESM","BV1nYh9zEE7N","BV1Nia3zgERK","BV1tNh1zvELR","BV1vehiz9EaK","BV1UThizGEpK","BV1aovNzGELz","BV1KMh1zeE2x","BV1xGhmzBETp","BV1Hdh1zhECn","BV1zYaGzcEwH","BV1q3hqzbEiU","BV14thZzMExY","BV1XieXzMEYv","BV1dQhvzpEJq","BV1TshYzPE7r","BV1mmhozvEEX","BV1w4eSzmEVW","BV13thzzxETS","BV1vqaGztEBr","BV1CZeCzwEFe","BV1A1hXzHEou","BV15Ge9zCEyK","BV19MvAzTEQU","BV1iGeyzQEyw","BV1sAvwzQEWT","BV1DqhRzeEE8","BV1WphQz7EQZ","BV1d2hyzmEzh","BV1YztQzREMr","BV1V5hvzUEFb","BV1D5hyzzEv8","BV1AYhYzZEEu","BV17WvwzMETQ","BV1eqhizQENA","BV1i8h1zEEMC","BV18EhYzMEKB","BV1GSh9zqEVW","BV1bFhCzcEVv","BV1JoeXz9E1W","BV1CYekz8Ep9","BV1CUhXzEEcQ","BV1vUhyzjED3","BV1zLhaznEep","BV1TChRzhEke","BV1L4a7z6EJo","BV17Mh2zpEb4","BV1MAe8zYEch","BV1XKa5z4ESX","BV1X8hXzhEc9","BV146eDzoEY6","BV1FJeRzZEdQ","BV1twvwzpETz","BV172hdz7E7T","BV13WhqznEjE","BV1wyeZzMEJT","BV1UxvNzYEnK","BV1j6h9zCEzF","BV1ira5zYEYa","BV1CkhDzyEpo","BV1g1hiz7EN1","BV1fjezzCEpT","BV1Xde9zVEbu","BV1QVh9zwEJS","BV1sbhdzfE1A","BV1NBaVz2EmW","BV1xUheziEGu","BV1zRhXz5Eo1","BV1Q7h2zLEGd","BV1rGhazpEX6","BV1BivczgE5t","BV1HKhzz6EJp","BV1AYhyztE1E","BV1VDhdzyE1m","BV13JhvzLEtt","BV18Vh9zwEqv","BV1BAhdz2EVS","BV1FdhXzyEA4","BV1tyhezuEdt","BV17De2zeEDy","BV1f2hqzeE5W","BV1RXhvzQEeU","BV1U3e1zGEJL","BV1azhiznEbr","BV1PEemzLERU","BV1Cwe2zTELq","BV1gahrzhEy7","BV1zFhdzUEU8","BV1nBhdzXEBY","BV1VyhQzAEZS","BV1jmhdz2Eax","BV1yhhYzFEid","BV1Yih1z5Exh","BV1Bpa7zVETo","BV1vNh9zqExg","BV1VFaGz9Eke","BV1p9hezAEtE","BV1vhh1zmEqg","BV1WAaVz6E7T","BV1Hdh1zhE1e","BV1JzhYz9EiF","BV1YwaGzpE32","BV1mgeozrENC","BV1RmhkzuEcZ","BV1WfhBzLErv","BV1QEh2zyEDT","BV1FfhRznEXh","BV19DhYzLEcL","BV1E3aVzNEv7","BV1oYeozdEHr","BV14xhYzYEwL","BV1PWefzrEsT","BV1xNhCzoE5q","BV1Knh9ztEov","BV1GQh9zKEko","BV1NthYzwEG2","BV1ishaz5EBX","BV12ZemzmEmh","BV1ByhdzUE4M","BV1jGhqzZEEJ","BV1UnhdzNEdv","BV1MJhYzBEke","BV1jyhdzUEtE","BV1hRhkzeEHw","BV1MDhBzQEu8","BV1WAaVz6EjK","BV1xthdz8ETt","BV1bPh1zKEKB","BV1bCeXzeEYQ","BV1uhhzzWEzu","BV1mahDzHEdP","BV1GshzztEtk","BV1rzvNz9ESh","BV1sbhdzfEHu","BV1QLvNzgE73","BV13Chmz7E3A","BV1tVhQzWE6T","BV1onhXzqE5S","BV1q5aVzAEvW","BV1nme2ziE6D","BV1HevAznEgj","BV154hCzkEzh","BV14shdzaE2q","BV1DEvNzMEMg","BV1gfhyz6E1N","BV1Z9e2zaE92","BV1S4vTz6EUu","BV1wme2zqEuU","BV1hte2zJE7H","BV1bch1zMEzV","BV1QThQztEka","BV1aHe2zWEDU","BV1zNhqzYECp","BV1pZh1zFE7e","BV1YRhyzGEKD","BV1dCa5zwEeq","BV1BBhkzLEzE","BV1DMaGz7EB9","BV1Jme2ziEBu","BV1Lmhdz2EKw","BV1RBaGzoEBj","BV1trhazYEeo","BV1ephrzqEqz","BV1eJeUzYE2S","BV1vLe2ztEjK","BV11jeozqELD","BV1ZQhqzcE4D","BV1rdhCzXEqd","BV1HzhvzaEkZ","BV1V8hCz6Er5","BV1RuhYz5ExC","BV1ighvzHEg7","BV1bshZzgE2p","BV1BGe2z8ECz","BV1aGhdz6Et2","BV1HCa3zvEkm","BV1VohqzZEr2","BV1vMhvzXES9","BV1P3eXzxEjP","BV1HYh9zEE73","BV1ZzhYzXERj","BV1L8h1zEEqp","BV14whCzfEWq","BV1G8hXzaEjA","BV1Qfh2z7E1b","BV1bjh9zFEHT","BV1e6hBztEtd","BV18ChizmELW","BV1mfeSzREoF","BV1W9hezAEFS","BV1gbeZzEErS","BV1MdhQzRE4M","BV1M7eQzaE6Q","BV14ve2zyEkq","BV1VSh9zqEqb","BV1qPekzJExd","BV1nPhqzPEGW","BV1xUheziEj2","BV11bvNzhEBn","BV1JCekzXEGH","BV1nuhrzjEZ7","BV1EmeyzZEjm","BV1pahdzoEuJ","BV1EMhqzhEj5","BV1hcvKzzErd","BV1Khhqz1Ebx","BV1djeGzfE3x","BV11ChXzQEYY","BV1noeXz9EAC","BV1X4eUzZETF","BV1SpvTzVEZb","BV1VevPzuEqG","BV1oyhYzJE4Q","BV1sMhCzREwN","BV1UNhizCESA","BV1WThCzxEtb","BV1tghSzmEUt","BV1Hghrz1EAh","BV1qKeyzdEy6","BV1P1hXzHEVw","BV1YXhyzCErg","BV1XwaGzHEYS","BV1KjhSzyEVk","BV1SQh6zZE4p","BV1nFh2zZEhv","BV1d3h2zJEuV","BV1Qde9zVEte","BV1SqhRzeEvX","BV1NNhRz4ET6","BV1L2hdz7Eqf","BV1LDhdzyEcz","BV1UTeozCE4Q","BV1QLh2z2Emk","BV1YxeUzbE1h","BV12LaGzkEbm","BV1Lje2zZEB4","BV1KehqzCEWp","BV19BhmzDEb3","BV19Shyz1Erg","BV1zWhizhEED","BV1d6hhz5ERs","BV1MthqzmEiN","BV1iPh9zMEj7","BV1HxhQzLERq","BV1c4aGzKEoJ","BV14CeDzREjj","BV1UxhUzmEZL","BV1X9e9zyEzY","BV1p8h9znETV","BV1P2hXzDE23","BV1D6h1zrEz9","BV1qWeXz7Efo","BV1VqhmzHEfu","BV1hVh9zwEPR","BV1e3hdz3ExD","BV1phhdztERy","BV1ayaGzXEJX","BV1Z8hiz4EGn","BV1h9hkzNELf","BV1PpemzkEGu","BV1Zch9zgEct","BV1BzvczMEoz","BV1NLhmzqEPZ","BV1Jghrz1ES1","BV1x9eozGEMQ"]
    let failMsg;
    [$('secret').placeholder,
    $('coverText').placeholder,
    failMsg]=setLang({
        "zh-CN":["输入有效链接","输入待解析链接",""],
        "zh-TW":["輸入需加密的資訊","輸入需解密的掩飾文本",""],
        "en":["Enter the message to encrypt","Enter the cover text to decrypt",""]})
    $('hide').onclick = async () => {
      $('coverText').value=convert($('secret').value);
    };
    $('extract').onclick = async () => {
      $('secret').value=extract($('coverText').value);
    };
function buildEqualWeightTruncatedBinary() {
  const alphabet = ["e","t","a","o","i","n","s","h","r","d","l","c","u","m","w","f","g","y","p","b","v","k","0","1","2","3","4","5","6","7","8","9","j","x","q","z","_","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","?","=","/","&","%",".","-","@","#"];//可以为每个网站单独定制字符集，但维护成本较高
  const n = alphabet.length,k = Math.ceil(Math.log2(n)), t = (1 << k) - n;
  const index = new Map(alphabet.map((s, i) => [s, i]));
  const pushBits = (arr, v, len) => { while (len--) arr.push((v >> len) & 1); };
  const encode = (str) => {
    const bits = [];
    for (let c of str) {
      const i = index.get(c);
      if (i == null) throw new Error(`Unknown symbol: ${c}`);
      pushBits(bits, i < t ? i : i + t, i < t ? k-1 : k);
    }
    return bits;
  };
  const decode = (bits) => {
    let p = 0, out = '';
    while (p < bits.length) {
      let x = 0; for (let i = 0; i < k - 1; i++) x = x * 2 + bits[p++];
      out += alphabet[x < t ? x : (x * 2 + bits[p++]) - t];
    }
    return out;
  };
  return { encode, decode };
}
// TBE + flush 终止码字
const stego = (bits, mapping) => {
  const n = mapping.length;
  const k = Math.floor(Math.log2(n));
  const m = 2 ** (k + 1) - n; // 使用 k 位的短码数量（TBE 参数）
  // 从 pos 起读 cnt 位（高位在前）
  const read = (pos, cnt) => {
    let v = 0;
    for (let j = 0; j < cnt; j++) v = v * 2 + (bits[pos + j] & 1);
    return v;
  };
  const len = bits.length;
  let out = '';
  let i = 0;
  // 按 TBE 解码：优先吃满一个码字（短码 k 位；否则长码 k+1 位）
  while (i + k <= len) {
    const b = read(i, k); // 预读 k 位
    if (b < m) {
      out += mapping[b]; // 短码
      i += k;
    } else {
      if (i + k + 1 > len) break; // 不够长码，交给“终止码字”
      const idx = b * 2 + (bits[i + k] & 1) - m; // 长码索引
      out += mapping[idx];
      i += k + 1;
    }
  }
  // 终止码字：把剩余位（可为 0 位）塞进一个合法 TBE 码字中
  const r = len - i;
  if (r < k) {
    // 在剩余前缀后插入终止标记 1，再补 0 到 k 位
    const prefix = read(i, r);
    const shift = k - r;
    const b = prefix * 2 ** shift + 2 ** (shift - 1);
    const idx = b < m ? b : b * 2 - m; // 短码则直接用，否则按长码（等价于补 0）
    out += mapping[idx];
  } else if (r === k) {
    // 恰好剩 k 位且 b>=m：补上终止标记 1 构成长码
    const b = read(i, k);
    const idx = b * 2 + 1 - m;
    out += mapping[idx];
  }
  return out;
};
const unstego = (text, mapping) => {
  const n = mapping.length;
  const k = Math.floor(Math.log2(n));
  const m = (1 << (k + 1)) - n;
  // 反向字典：符号 -> 索引
  const dict = new Map(mapping.map((s, i) => [s, i]));
  // 文本 -> 索引序列（按字符；如需多字符 token，请替换为自定义分词）
  const symbols = Array.from(text, ch => dict.get(ch));
  // 写入高位在前的二进制位
  const pushBits = (val, len, dst) => {
    for (let t = len - 1; t >= 0; t--) dst.push((val >> t) & 1);
  };
  // 根据 TBE 规则把索引 v 写成码字（v<m 用 k 位，否则用 k+1 位写 v+m）
  const emit = (v, dst) => (v < m ? pushBits(v, k, dst) : pushBits(v + m, k + 1, dst));
  const outBits = [];
  // 解码除最后一个符号外的所有码字（正常 TBE 码字）
  for (let i = 0; i + 1 < symbols.length; i++) emit(symbols[i], outBits);
  // 最后一个为“终止码字”：还原位串，去掉所有尾随 0，再去掉最后一个 1（终止标记）
  if (symbols.length) {
    const buf = [];
    emit(symbols[symbols.length - 1], buf);
    let j = buf.length - 1;
    while (j >= 0 && buf[j] === 0) j--; // 去尾随 0，停在最后一个 1 上
    if (j > 0) outBits.push(...buf.slice(0, j)); // 丢掉终止标记 1
  }
  return outBits;
};
const { encode, decode }=buildEqualWeightTruncatedBinary();
function convert(originalUrl) {
  try {
    console.log(originalUrl)
    const url = new URL(shorten(originalUrl));
    const pathAfterHost = (url.pathname + url.search + url.hash).replace(/^\/+/, '');console.log(encode(pathAfterHost));
    if(url.hostname==='youtube.com'||url.hostname==='youtu.be'){
        url.hostname = 'www.bilibili.com'
        url.pathname = `/video/${bvids[Math.floor(Math.random() * bvids.length)]}`;
        url.search = `?share_source=copy_web&vd_source=${stego(encode(pathAfterHost),["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"])}`;//
        console.log(url.href);return url.href;
    }
    return `不支持的链接`;
  } catch (error) {
    return `不支持的链接`;
  }
}
function extract(originalUrl) {
  try {
    const url = new URL(originalUrl);
    if(url.hostname==='www.bilibili.com'){
        url.hostname = 'youtu.be'
        const tail=decode(unstego(url.searchParams.get('vd_source'),["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"]))
        url.href = url.origin + (tail && !/^[?#]/.test(tail) ? '/' : '') + tail;
    }
    return url.href
  } catch (error) {
    return `不支持的链接`;
  }
}
  </script>
</Layout>